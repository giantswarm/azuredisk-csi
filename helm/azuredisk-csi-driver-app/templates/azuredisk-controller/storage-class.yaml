{{- if and .Values.provider (eq .Values.provider "capz") -}}
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: managed-premium
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
provisioner: disk.csi.azure.com
parameters:
  cachingMode: ReadOnly
  kind: managed
  skuname: Premium_LRS
allowVolumeExpansion: true
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Delete
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: managed-standard
provisioner: disk.csi.azure.com
parameters:
  cachingMode: ReadOnly
  kind: managed
  skuname: Standard_LRS
allowVolumeExpansion: true
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Delete
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: managed-premium-retain
provisioner: disk.csi.azure.com
parameters:
  cachingMode: ReadOnly
  kind: managed
  skuname: Premium_LRS
allowVolumeExpansion: true
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Retain
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: managed-standard-retain
provisioner: disk.csi.azure.com
parameters:
  cachingMode: ReadOnly
  kind: managed
  skuname: Standard_LRS
allowVolumeExpansion: true
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Retain
{{- end }}
